<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /R9on+kd5Qa3gwAAAABJRU5ErkJggg==
</value>
  </data>
</root>